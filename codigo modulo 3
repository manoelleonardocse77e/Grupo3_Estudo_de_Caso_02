import csv
import time

medicamentos = {}
estoque_medicamentos = {}
lotes_medicamentos = {}
registro_administracao = []

def criar_arquivo_csv():
    with open('medicamentos.csv', 'w', newline='') as arquivo:
        cabecalho = ['ID', 'Nome', 'Princípio Ativo', 'Dosagem', 'Forma de Administração']
        writer = csv.writer(arquivo)
        writer.writerow(cabecalho)

def carregar_medicamentos():
    criar_arquivo_csv()
    with open('medicamentos.csv', mode='r') as file:
        reader = csv.DictReader(file)
        for row in reader:
            medicamento_id = int(row['ID'])
            medicamentos[medicamento_id] = {
                'Nome': row['Nome'],
                'Princípio Ativo': row['Princípio Ativo'],
                'Dosagem': row['Dosagem'],
                'Forma de Administração': row['Forma de Administração']
            }
            estoque_medicamentos[medicamento_id] = 0
            lotes_medicamentos[medicamento_id] = []

def cadastrar_medicamento():
    nome = input("Nome do medicamento: ")
    principio_ativo = input("Princípio ativo: ")
    dosagem = input("Dosagem: ")
    forma_administracao = input("Forma de administração: ")

    medicamento_id = len(medicamentos) + 1
    medicamentos[medicamento_id] = {
        'Nome': nome,
        'Princípio Ativo': principio_ativo,
        'Dosagem': dosagem,
        'Forma de Administração': forma_administracao
    }

    estoque_medicamentos[medicamento_id] = 0

    with open('medicamentos.csv', mode='a', newline='') as file:
        fieldnames = ['ID', 'Nome', 'Princípio Ativo', 'Dosagem', 'Forma de Administração']
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        writer.writerow({'ID': medicamento_id, 'Nome': nome, 'Princípio Ativo': principio_ativo, 'Dosagem': dosagem, 'Forma de Administração': forma_administracao})

    print(f"Medicamento {nome} cadastrado com sucesso!")

def listar_medicamentos():
    for medicamento_id, info in medicamentos.items():
        print("=-=" * 10)
        print(f"ID: {medicamento_id}")
        print(f"Nome: {info['Nome']}")
        print(f"Princípio Ativo: {info['Princípio Ativo']}")
        print(f"Dosagem: {info['Dosagem']}")
        print(f"Forma de Administração: {info['Forma de Administração']}")
        print(f"Quantidade disponível: {estoque_medicamentos[medicamento_id]}")
        print("=-=" * 10)
        time.sleep(3)

def controle_estoque():
    while True:
        print("=-=" * 13)
        print("Controle de Estoque")
        print("1. Adicionar Medicamento ao Estoque")
        print("2. Remover Medicamento do Estoque")
        print("3. Voltar ao Menu Principal")
        print("=-=" * 13)
        escolha = input("Opção: ")

        if escolha == "1":
            listar_medicamentos()
            medicamento_id = int(input("ID do medicamento para adicionar ao estoque: "))
            quantidade = int(input("Quantidade a adicionar ao estoque: "))
            estoque_medicamentos[medicamento_id] += quantidade
            print(f"{quantidade} unidades de {medicamentos[medicamento_id]['Nome']} adicionadas ao estoque.")
        elif escolha == "2":
            listar_medicamentos()
            medicamento_id = int(input("ID do medicamento para remover do estoque: "))
            quantidade = int(input("Quantidade a remover do estoque: "))
            if quantidade <= estoque_medicamentos[medicamento_id]:
                estoque_medicamentos[medicamento_id] -= quantidade
                print(f"{quantidade} unidades de {medicamentos[medicamento_id]['Nome']} removidas do estoque.")
            else:
                print("Quantidade insuficiente em estoque.")
        elif escolha == "3":
            break
        else:
            print("Opção inválida. Tente novamente.")

def alertas_estoque_baixo():
    print("=-=" * 13)
    print("Medicamentos com estoque baixo:")
    for medicamento_id, quantidade in estoque_medicamentos.items():
        if quantidade <= 15:
            print(f"Nome: {medicamentos[medicamento_id]['Nome']}")
            print(f"Quantidade disponível: {quantidade}")
            print("=-=" * 13)

def rastreamento_lotes():
    while True:
        print("=-=" * 13)
        print("Rastreamento de Lotes")
        print("1. Adicionar Lote")
        print("2. Listar Lotes por Medicamento")
        print("3. Voltar ao Menu Principal")
        print("=-=" * 13)
        escolha = input("Opção: ")

        if escolha == "1":
            listar_medicamentos()
            medicamento_id = int(input("ID do medicamento para adicionar lote: "))
            lote = input("Número do lote: ")
            data_validade = input("Data de validade (DD/MM/AAAA): ")
            lotes_medicamentos[medicamento_id].append({'Lote': lote, 'Data de Validade': data_validade})
            print(f"Lote {lote} adicionado para {medicamentos[medicamento_id]['Nome']}.")
        elif escolha == "2":
            listar_medicamentos()
            medicamento_id = int(input("ID do medicamento para listar lotes: "))
            print("Lotes para", medicamentos[medicamento_id]['Nome'])
            for lote_info in lotes_medicamentos[medicamento_id]:
                print(f"Lote: {lote_info['Lote']}, Data de Validade: {lote_info['Data de Validade']}")
            print("=-=" * 13)
        elif escolha == "3":
            break
        else:
            print("Opção inválida. Tente novamente.")

def registrar_administracao():
    while True:
        listar_medicamentos()
        continuar = int(input("Deseja Continuar?\n[1] Sim\n[2] Não\n-> "))
        if continuar == 1:
            medicamento_id = int(input("ID do medicamento administrado: "))
            if medicamento_id not in medicamentos:
                print("ID de medicamento inválido. Tente novamente.")
                continue
            quantidade = int(input("Quantidade administrada: "))
            paciente = input("Nome do paciente: ")
            dosagem = input("Dosagem: ")
            responsavel = input("Responsável pela administração: ")
            registro_administracao.append({
                'Medicamento': medicamentos[medicamento_id]['Nome'],
                'Quantidade': quantidade,
                'Paciente': paciente,
                'Dosagem': dosagem,
                'Responsável': responsavel,
                'Data e Hora': time.strftime('%Y-%m-%d %H:%M:%S')
            })
            estoque_medicamentos[medicamento_id] -= quantidade
            print(f"Administração registrada para {medicamentos[medicamento_id]['Nome']}.")

        elif continuar == 2:
            break
        else:
            print("Opção Invalida!")
            continue

def listar_registro_administracao():
    print("=-=" * 13)
    print("Registro de Administração de Medicamentos")
    for admin_info in registro_administracao:
        print(f"Medicamento: {admin_info['Medicamento']}")
        print(f"Quantidade: {admin_info['Quantidade']}")
        print(f"Paciente: {admin_info['Paciente']}")
        print(f"Dosagem: {admin_info['Dosagem']}")
        print(f"Responsável: {admin_info['Responsável']}")
        print(f"Data e Hora: {admin_info['Data e Hora']}")
        print("=-=" * 13)
    time.sleep(3)

carregar_medicamentos()

while True:
    print("=-=" * 13)
    print("Escolha uma opção:")
    print("1. Cadastrar Medicamento")
    print("2. Listar Medicamentos")
    print("3. Controle de Estoque")
    print("4. Alertas de Estoque Baixo")
    print("5. Rastreamento de Lotes")
    print("6. Registrar Administração de Medicamentos")
    print("7. Listar Registro de Administração")
    print("8. Sair")
    print("=-=" * 13)
    escolha = input("Opção: ")

    if escolha == "1":
        cadastrar_medicamento()
    elif escolha == "2":
        listar_medicamentos()
    elif escolha == "3":
        controle_estoque()
    elif escolha == "4":
        alertas_estoque_baixo()
    elif escolha == "5":
        rastreamento_lotes()
    elif escolha == "6":
        registrar_administracao()
    elif escolha == "7":
        listar_registro_administracao()
    elif escolha == "8":
        break
    else:
        print("Opção inválida. Tente novamente.")
